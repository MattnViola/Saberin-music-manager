@using Microsoft.AspNetCore.SignalR.Client
@inherits LayoutComponentBase

@inject NavigationManager Navigation

<nav class="bg-gray-900 w-64 min-h-screen md:fixed z-50">
    <div class="flex items-center justify-between px-4 py-6">
        <h2 class="text-2xl font-semibold text-white">Music Library</h2>
    </div>

    <div class="px-4">
        <ul class="space-y-4">
            <li>
                <a href="/" class="flex items-center px-4 py-2 text-gray-400 hover:bg-purple-800 hover:text-white transition rounded-lg">
                    <svg class="w-6 h-6 mr-3 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7m-7-7v18" />
                    </svg>
                    Library
                </a>
            </li>

            <li>
                <a href="/AddSong" class="flex items-center px-4 py-2 text-gray-400 hover:bg-purple-800 hover:text-white transition rounded-lg">
                    <svg class="w-6 h-6 mr-3 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M12 5l7 7-7 7" />
                    </svg>
                    Add Song
                </a>
            </li>

            <li>
                <a href="/playlists" class="flex items-center px-4 py-2 text-gray-400 hover:bg-purple-800 hover:text-white transition rounded-lg">
                    <svg class="w-6 h-6 mr-3 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 6h13M8 12h9M8 18h4M3 6h.01M3 12h.01M3 18h.01" />
                    </svg>
                    Playlists
                </a>
            </li>

            <!-- Notification icon -->
            <li class="relative">
                <div class="flex items-center px-4 py-2 text-gray-400 cursor-pointer hover:bg-purple-800 hover:text-white transition rounded-lg" @onclick="ToggleNotificationDropdown">
                    <svg class="w-6 h-6 mr-3" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"
                         style="color: @(hasNotifications ? "red" : "white")">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405C18.215 14.79 17 13.209 17 11V7a5 5 0 00-10 0v4c0 2.209-1.215 3.79-1.595 4.595L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9" />
                    </svg>
                    <span>Notifications</span>

                    <!-- Notification badge -->
                    @if (notificationCount > 0)
                    {
                        <span class="ml-2 bg-red-600 text-white text-xs rounded-full px-2 py-1">@notificationCount</span>
                    }
                </div>

                <!-- Notification dropdown -->
                @if (showNotifications)
                {
                    <div class="absolute right-0 mt-2 w-48 bg-white border border-gray-300 rounded-lg shadow-lg z-50">
                        <ul class="text-gray-700">
                            @if (songNotifications.Count == 0)
                            {
                                <li class="px-4 py-2">No new notifications</li>
                            }
                            else
                            {
                                @foreach (var notification in songNotifications)
                                {
                                    <li class="px-4 py-2">New song added: @notification</li>
                                }
                            }
                        </ul>
                    </div>
                }
            </li>
        </ul>
    </div>

    <div class="absolute bottom-0 left-0 right-0 p-4 bg-gray-800">
        <p class="text-gray-400 text-sm">Music Manager</p>
    </div>
</nav>

@code {
    private HubConnection? hubConnection;
    private List<string> songNotifications = new();
    private bool hasNotifications = false;
    private int notificationCount = 0;
    private bool showNotifications = false;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/songhub"))
            .Build();

        hubConnection.On<string>("ReceiveSongNotification", (songName) =>
        {
            songNotifications.Add(songName);
            hasNotifications = true;
            notificationCount++;
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }

    private void ToggleNotificationDropdown()
    {
        showNotifications = !showNotifications;

        if (!showNotifications)
        {
            hasNotifications = false;
            notificationCount = 0;
            songNotifications.Clear(); 
        }
    }
}

