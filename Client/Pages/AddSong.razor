@page "/AddSong"
@inject HttpClient Http
@using music_manager_starter.Shared
@using Microsoft.AspNetCore.Components.Forms

<div class="p-6">
    <h2 class="text-xl font-semibold text-white">Add New Song</h2>
    <EditForm Model="newSong" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-4">
            <label class="block text-gray-200">Title</label>
            <InputText @bind-Value="newSong.Title" class="mt-1 block w-full p-2 border rounded" />
        </div>

        <div class="mb-4">
            <label class="block text-gray-200">Artist</label>
            <InputText @bind-Value="newSong.Artist" class="mt-1 block w-full p-2 border rounded" />
        </div>

        <div class="mb-4">
            <label class="block text-gray-200">Album</label>
            <InputText @bind-Value="newSong.Album" class="mt-1 block w-full p-2 border rounded" />
        </div>

        <div class="mb-4">
            <label class="block text-gray-200">Genre</label>
            <InputText @bind-Value="newSong.Genre" class="mt-1 block w-full p-2 border rounded" />
        </div>

        <!-- Release Date Input -->
        <div class="mb-4">
            <label class="block text-gray-200">Release Date</label>
            <InputDate @bind-Value="newSong.ReleaseDate" class="mt-1 block w-full p-2 border rounded" />
        </div>

        <!-- Album Cover Art Upload -->
        <div class="mb-4">
            <label class="block text-gray-200">Album Cover Art</label>
            <InputFile OnChange="HandleFileSelected" />
        </div>

        <!-- File Name Display -->
        @if (!string.IsNullOrEmpty(fileName))
        {
                <div class="text-white mt-2 mb-4"> <!-- Added bottom margin here -->
                @fileName uploaded!
                </div>
        }

        <button type="submit" class="bg-purple-600 text-white px-4 py-2 rounded">Add Song</button>
    </EditForm>

    @if (message != null)
    {
            <p class="mt-4 text-green-500">@message</p>
    }
</div>

@code {
    private Song newSong = new Song();
    private string message;
    private byte[] albumCoverArt;
    private string fileName;

    private async Task HandleValidSubmit()
    {
        newSong.AlbumCoverArt = albumCoverArt; // Attach the album cover art
        var response = await Http.PostAsJsonAsync("api/songs", newSong);
        if (response.IsSuccessStatusCode)
        {
            message = "Song added successfully!";
            newSong = new Song();
            albumCoverArt = null; // Reset the album art after successful submission
            fileName = null; // Reset the file name after submission
        }
        else
        {
            message = "Error adding song. Please try again.";
        }
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var buffer = new byte[file.Size];
        await file.OpenReadStream().ReadAsync(buffer);
        albumCoverArt = buffer; // Store the uploaded file as a byte array
        fileName = $"{file.Name}"; // Store the file name to display it in the format filename.format uploaded!
    }
}
